# Create a Secret Key for Rails
#
# You can generate a secure one through the Greenlight docker image
# with the command.
#
#   docker run --rm bigbluebutton/bbb-app-rooms:latest bundle exec rake secret
#
SECRET_KEY_BASE=secret

RELATIVE_URL_ROOT=apps

## BigBlueButton configuration (Required)
# BIGBLUEBUTTON_ENDPOINT=http://test-install.blindsidenetworks.com/bigbluebutton/
# BIGBLUEBUTTON_SECRET=8cd8ef52e8e101574e400365b55e11a6
# BIGBLUEBUTTON_MODERATOR_ROLES=Instructor,Faculty,Teacher,Mentor,Administrator,Admin

## Enable recording functionality. It is true by default.
# BIGBLUEBUTTON_RECORDING_ENABLED = false
# BIGBLUEBUTTON_RECORDING_PUBLIC_FORMATS=presentation,capture

## BigBlueButton LTI Broker configuration
# For assing new applications in the broker run:
# rake db:apps:add[name,redirect_uri,uid,secret,root] as in
# rake db:apps:add[rooms,https://lti.jesus.blindside-dev.com/apps/rooms/auth/bbbltibroker/callback,b21211c29d27,3590e00d7ebd]
# OMNIAUTH_BBBLTIBROKER_SITE=http://localhost
# OMNIAUTH_BBBLTIBROKER_ROOT=lti
# OMNIAUTH_BBBLTIBROKER_KEY=b21211c29d27
# OMNIAUTH_BBBLTIBROKER_SECRET=3590e00d7ebd

## Set the hostname using your own domain (Required)
URL_HOST=lti.jesus.blindside-dev.com

## Use only with postgres instance outside the one pre-packaged with docker-compose (Optional)
# DATABASE_URL=postgres://postgres:password@localhost

## Enable redis for actioncable (Optional)
# REDIS_URL=redis://myuser:mypass@localhost

## Use to send logs to Standard Output (Optional)
RAILS_LOG_TO_STDOUT=true

## Use to send logs to external repository (Optional)
# RAILS_LOG_REMOTE_NAME=xxx.papertrailapp.com
# RAILS_LOG_REMOTE_PORT=99999
# RAILS_LOG_REMOTE_TAG=bbb-lti-broker
# RAILS_LOG_TO_STDOUT=false

# DEVELOPER_MODE_ENABLED=true

## Use to serve assets through the app (Required for now)
RAILS_SERVE_STATIC_FILES=true

## Use to enable features only available for development (Optional)
# RAILS_ENV=development

## Use cache for optimizing requests to external servers (Optional)
# RAILS_CACHE_ENABLED=true

## Use to retrieve credentials for a BigBlueButton server per tenant (Optional)
# EXTERNAL_MULTITENANT_ENDPOINT=
# EXTERNAL_MULTITENANT_SECRET=

## Enable redis as the Action Cable adapter.
# CABLE_ADAPTER=redis

## Web server settings
# The size of the thread pool per worker used by Greenlight's web server.
# For details, see: https://github.com/puma/puma#thread-pool
# Default: 5
# RAILS_MAX_THREADS=5

# The amount of workers (separate processes) used by the web server.
# For details, see: https://github.com/puma/puma#clustered-mode
# Default: 1
# WEB_CONCURRENCY=1

## Define log level in production.
# [debug|info|warn|error|fatal]
# Default 'warn'.
# LOG_LEVEL=warn
